package com.hackcmu.goatswithouthats;

import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.app.Activity;
import android.content.Intent;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;

public class NewGameActivity extends Activity implements OnItemSelectedListener, Connectable{

	public int colorChoice = 0;
	public String hostname = "";
	public Connection c = null;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_new_game);
		
		Spinner spinner = (Spinner) findViewById(R.id.colorspinner);
		
		ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(this,
		        R.array.color_array, android.R.layout.simple_spinner_item);
		adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
		
		spinner.setAdapter(adapter);
	}


	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.new_game, menu);
		return true;
	}
	
	public void onItemSelected(AdapterView<?> parent, View view, int pos, long id)
	{
		colorChoice = pos;
    }

    public void onNothingSelected(AdapterView<?> parent)
    {
        return;
    }
    
    public void clickedConnect(View view)
    {
    	EditText e = (EditText) findViewById(R.id.hostnameedittext);
    	hostname = e.getText().toString();
    	c = new Connection(hostname, 50001, this);
    	c.start();
    }
    
    private final Handler handler = new Handler()
    {
    	public void handleMessage(Message msg)
    	{
    		switch(msg.arg1)
    		{
    		case 1:
    			connectFail();
    			break;
    		case 2:
    			connectSuccess();
    			break;
    		}
    	}
    };
    
    public Handler getHandler(){return handler;}
    
    public void connectFail()
    {
    	TextView tv = (TextView) findViewById(R.id.connecterror);
    	tv.setText(getString(R.string.connect_error));
    	c = null;
    }

    public void connectSuccess()
    {
    	c.pushByte((byte)colorChoice);
    	View v = findViewById(R.id.connecterror);
    	v.setVisibility(View.INVISIBLE);
    	v = findViewById(R.id.hostnameedittext);
    	v.setVisibility(View.INVISIBLE);
    	v = findViewById(R.id.colortextview);
    	v.setVisibility(View.INVISIBLE);
    	v = findViewById(R.id.servertextview);
    	v.setVisibility(View.INVISIBLE);
    	v = findViewById(R.id.colorspinner);
    	v.setVisibility(View.INVISIBLE);
    	v = findViewById(R.id.connectbutton);
    	v.setVisibility(View.INVISIBLE);
    	TextView tv = (TextView) findViewById(R.id.findtext);
    	int animal = (int)(Math.random()*R.integer.num_animals);
    	switch(animal)
    	{
    	case 0:
    		tv.setText(R.string.find0);
    		break;
    	}
    	tv.setVisibility(View.VISIBLE);
    }
    
}
